name: CI

on:
  push:
    branches:
      - main
      # - dev
  # pull_request:
  #workflow_dispatch: #manually trigger 

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        # https://github.com/messense/maturin-action/issues/23
        args: --release -m pylib/Cargo.toml --sdist -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist
          
  linux-cross:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le]

    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        command: build
        args: --release -m pylib/Cargo.toml --sdist -o dist --find-interpreter # https://github.com/messense/maturin-action/issues/23
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        command: build
        args: --release -m pylib/Cargo.toml --sdist -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  # macos:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: messense/maturin-action@v1
  #     with:
  #       command: build
  #       args: --release -m pylib/Cargo.toml --sdist -o dist --find-interpreter
  #   - name: Upload wheels
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: wheels
  #       path: dist

  release:
    name: Release
    runs-on: ubuntu-latest

    # if: "startsWith(github.ref, 'refs/tags/')"
    # needs: [ macos, windows, linux ]
    needs: [ linux, windows, linux-cross ]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
