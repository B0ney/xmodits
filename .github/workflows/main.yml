# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  upload-compiled-binary:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: setup rustup
        run: |
          rustup override set 1.60
          rustup target add x86_64-pc-windows-gnu

      - uses: Swatinem/rust-cache@v1

      - name: install deps
        run: sudo apt install -y mingw-w64

      - name: compile linux
        run: cargo build --features="ascii_art" --release -p xmodits

      - name: compile windows
        run: cargo build  --features="ascii_art" --target=x86_64-pc-windows-gnu --release -p xmodits

      - name: version
        run: echo "::set-output name=version::$(./target/release/xmodits -v)"
        id: version

      - name: copy_extra_files
        run: |
          cp ./LICENSE ./target/release/
          cp ./README.md ./target/release/

          cp ./LICENSE ./target/x86_64-pc-windows-gnu/release/
          cp ./README.md ./target/x86_64-pc-windows-gnu/release/


      - name: zip up linux
        run: zip -j xmodits-linux ./target/release/{xmodits,LICENSE,README.md}

      - name: zip up windows
        run: zip -j xmodits-windows ./target/x86_64-pc-windows-gnu/release/{xmodits.exe,LICENSE,README.md}

      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "xmodits-linux.zip,xmodits-windows.zip"
          token: ${{ github.token }}
          tag: ${{ steps.version.outputs.version }}
